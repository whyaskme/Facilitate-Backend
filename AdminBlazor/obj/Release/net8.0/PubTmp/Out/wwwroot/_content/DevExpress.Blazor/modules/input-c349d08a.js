import{_ as e}from"./_tslib-6e8ca86b.js";import{D as t,b as s,c as n,d as i,I as o,T as r}from"./text-editor-ec6151e6.js";import{t as d}from"./constants-d4ec8d6f.js";import{s as u}from"./lit-element-70cf14f4.js";import{e as l}from"./property-d3853089.js";import{e as a}from"./custom-element-267f9a21.js";import"./single-slot-element-base-4ab30292.js";import"./data-qa-utils-8be7c726.js";import"./dx-ui-element-db9e89a3.js";import"./lit-element-base-7a85dca5.js";import"./logicaltreehelper-99f1adf9.js";import"./layouthelper-1d804c8c.js";import"./point-e4ec110e.js";import"./constants-58283e53.js";import"./css-classes-f45f6949.js";import"./custom-events-helper-e7f279d3.js";import"./eventhelper-8570b930.js";import"./devices-9f03a976.js";var p;!function(e){e.isDisplayFormatDefined="is-display-format-defined",e.isPassword="is-password"}(p||(p={}));const c={...p,...t};let h=class extends s{constructor(){super(...arguments),this.selectionObserver=new MutationObserver(this.selectInputValue.bind(this)),this.boundOnInputFocusHandler=this.onInputFocusIn.bind(this),this.boundOnInputFocusOutHandler=this.onInputFocusOut.bind(this),this.boundOnBeforeInputHandler=this.onBeforeInput.bind(this),this.boundOnInputKeyUpHandler=this.onInputKeyUp.bind(this),this.isDisplayFormatDefined=!1,this.isPassword=!1}get shouldProcessFocusIn(){return this.isDisplayFormatDefined}get shouldProcessFocusOut(){return this.isDisplayFormatDefined}get shouldProcessEnter(){return!1}get inputElement(){return this.fieldElement}get shouldProcessFieldTextVersion(){return!this.isPassword&&super.shouldProcessFieldTextVersion}onFieldReady(e,t){e.addEventListener("keyup",this.boundOnInputKeyUpHandler),e.addEventListener("beforeinput",this.boundOnBeforeInputHandler),e.addEventListener("focusin",this.boundOnInputFocusHandler),e.addEventListener("focusout",this.boundOnInputFocusOutHandler),super.onFieldReady(e,t),t&&this.focused&&this.onInputFocusIn()}onTemplateWithoutInputReady(e){super.onTemplateWithoutInputReady(e),e.addEventListener("focusin",this.boundOnInputFocusHandler),e.addEventListener("focusout",this.boundOnInputFocusOutHandler),e.addEventListener("keyup",this.boundOnInputKeyUpHandler)}onInputFocusIn(){this.shouldProcessFocusIn&&this.processFocusIn()}onInputFocusOut(e){this.shouldProcessFocusOut&&this.processFocusOut(e)}onInputKeyUp(e){this.isReadOnly||this.processKeyUp(e)}onBeforeInput(e){this.processBeforeInput(e)}processKeyUp(e){return!1}processFocusIn(){if(!this.fieldElement)return;const e=0===this.fieldElement.selectionStart&&this.fieldElement.selectionEnd===this.fieldElementValue.length&&this.focused;this.selectionObserver.observe(this.fieldElement,{attributeFilter:["data-need-selection"]}),this.raiseFocusIn(e)}processFocusOut(e){this.raiseFocusOut(this.fieldElementValue)}processBeforeInput(e){return!1}selectInputValue(){this.fieldElement&&this.focused&&(this.fieldElement.select(),this.fieldElement.removeAttribute("data-need-selection"),this.selectionObserver.disconnect())}raiseFocusIn(e){this.dispatchEvent(new n(e))}raiseFocusOut(e,t){this.dispatchEvent(new i(e,t))}raiseKeyDown(e){this.dispatchEvent(new o(e))}getFieldElement(){return this.querySelector(`.${r.TextEditInput}`)}selectInputText(e,t){this.fieldElement&&this.fieldElement.setSelectionRange(e,t)}selectAll(){this.fieldElement&&this.focused&&this.fieldElement.select()}onPasswordChanged(){this.isPassword&&(this.fieldElementValue="")}updated(e){this.rendered&&e.has("isPassword")&&this.onPasswordChanged(),super.updated(e)}};h.shadowRootOptions={...u.shadowRootOptions,delegatesFocus:!0},e([l({type:Boolean,attribute:p.isDisplayFormatDefined})],h.prototype,"isDisplayFormatDefined",void 0),e([l({type:Boolean,attribute:p.isPassword})],h.prototype,"isPassword",void 0),h=e([a(d)],h);const f={loadModule:function(){}};export{h as DxInputEditor,c as DxInputEditorAttributes,f as default};
